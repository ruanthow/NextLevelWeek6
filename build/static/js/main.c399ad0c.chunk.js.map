{"version":3,"sources":["pages/Room/styles.module.scss","pages/Home/style.module.scss","pages/NewRoom/styles.module.scss","components/RoomCode/styles.module.scss","components/Button/index.tsx","services/firebase.ts","Contexts/AuthContext.tsx","assets/images/illustration.svg","assets/images/logo.svg","assets/images/google-icon.svg","pages/Home/index.tsx","pages/NewRoom/index.tsx","assets/images/copy.svg","components/RoomCode/index.tsx","components/Questions/index.tsx","hooks/useRoom.ts","pages/Room/index.tsx","assets/images/delete.svg","assets/images/check.svg","assets/images/answer.svg","pages/AdminRoom/index.tsx","App.tsx","index.tsx"],"names":["module","exports","Button","isOutlined","props","className","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","database","AuthContext","createContext","AuthContextsProvider","useState","user","setUser","a","provider","GoogleAuthProvider","signInWithPopup","result","displayName","photoURL","uid","Error","id","name","photo","useEffect","unsubcribe","onAuthStateChanged","Provider","value","singInWithGoogle","children","Home","history","useHistory","keyRoom","setKeyRoom","useContext","push","e","preventDefault","trim","ref","get","roomRef","exists","alert","val","endAt","console","log","styles","pageAuth","src","illustrationSvg","alt","mainContent","logoImg","onClick","createRoom","googleImg","separator","onSubmit","type","placeholder","onChange","target","NewRoom","newRoom","setNewRoom","event","title","authorId","firebaseRooms","key","to","RoomCode","roomCode","navigator","clipboard","writeText","code","CopyImg","Questions","content","author","isAnswhered","isHighlighted","avatar","useRoom","roomsId","questions","setQuestions","setTitle","on","room","databaseRoom","fireBaseQuestions","parseQuestions","Object","entries","map","likeCount","values","likes","length","likeId","find","off","Room","useParams","newQuestion","setNewQuestion","question","questionId","remove","pageRoom","roomtitle","rows","formFooter","userInfo","disabled","aria-label","handleLikeQuestion","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","AdminRoom","window","confirm","update","Date","handleCheckQuestionAsAnswered","checkImg","handleCheckHighlightQuestions","answerImg","handleDeleteQuestion","deleteImg","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c399ad0c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageRoom\":\"styles_pageRoom__2qKbw\",\"content\":\"styles_content__2nTsD\",\"roomtitle\":\"styles_roomtitle__2ZetH\",\"formFooter\":\"styles_formFooter__2Jbzn\",\"userInfo\":\"styles_userInfo__3h2JK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageAuth\":\"style_pageAuth__3ywiV\",\"mainContent\":\"style_mainContent__mHRjP\",\"createRoom\":\"style_createRoom__d1DUI\",\"separator\":\"style_separator__29Xgg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageAuth\":\"styles_pageAuth__31WzN\",\"mainContent\":\"styles_mainContent__3vVtB\",\"createRoom\":\"styles_createRoom__3NE_y\",\"separator\":\"styles_separator__1_OO7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"roomCode\":\"styles_roomCode__tr_PI\"};","import {ButtonHTMLAttributes} from 'react';\r\n\r\n\r\nimport './styles.scss'\r\n\r\ntype ButtonProps = ButtonHTMLAttributes<HTMLButtonElement> & {\r\n    isOutlined?: boolean\r\n}\r\n\r\nexport function Button({isOutlined = false , ...props }:ButtonProps){\r\n    return(\r\n        <button \r\n        className={`button ${isOutlined ? 'outlined' : ''}`} \r\n        {...props}\r\n        />\r\n        \r\n    )\r\n}\r\n","import firebase from 'firebase/app';\r\n\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STOREGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDERID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n  };\r\n\r\n\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n\r\n  const auth = firebase.auth();\r\n  const database = firebase.database();\r\n\r\n  export {firebase, auth, database}","import { createContext, ReactNode, useEffect, useState } from \"react\";\r\nimport { auth, firebase } from \"../services/firebase\";\r\n\r\n\r\n\r\n\r\ninterface User{\r\n    id:string;\r\n    name:string;\r\n    photo:string\r\n  }\r\n  \r\ninterface AuthContextProps{\r\n    user: User | undefined;\r\n    singInWithGoogle: () => Promise<void>\r\n    \r\n  }\r\ninterface AuthContextProviderProps{\r\n    children: ReactNode\r\n}\r\n\r\nexport const AuthContext = createContext({} as AuthContextProps)\r\n\r\n\r\nexport function AuthContextsProvider(props: AuthContextProviderProps){\r\n    const [user, setUser] = useState<User>();\r\n    \r\n    useEffect(()=>{\r\n      const unsubcribe = auth.onAuthStateChanged(user =>{\r\n       if(user){\r\n          const {displayName, photoURL, uid} = user\r\n  \r\n          if(!displayName || !photoURL){\r\n            throw new Error('Missing information from Google account')\r\n          }\r\n          setUser({\r\n            id:uid,\r\n            name:displayName,\r\n            photo:photoURL\r\n            \r\n          })\r\n      }\r\n      })\r\n      return () =>{\r\n        unsubcribe()\r\n      }\r\n    },[])\r\n    \r\n    async function singInWithGoogle(){\r\n      const provider = new firebase.auth.GoogleAuthProvider()\r\n      \r\n      const result = await auth.signInWithPopup(provider);\r\n        \r\n      if(result.user){\r\n          const {displayName, photoURL, uid} = result.user\r\n  \r\n          if(!displayName || !photoURL){\r\n            throw new Error('Missing information from Google account')\r\n          }\r\n          setUser({\r\n            id:uid,\r\n            name:displayName,\r\n            photo:photoURL\r\n            \r\n          })\r\n      }\r\n    }\r\n    \r\n    return(\r\n        <AuthContext.Provider value={{user, singInWithGoogle}}>\r\n            {props.children}\r\n        </AuthContext.Provider>\r\n    );\r\n}","export default __webpack_public_path__ + \"static/media/illustration.ae7276f0.svg\";","export default __webpack_public_path__ + \"static/media/logo.a88331cb.svg\";","export default __webpack_public_path__ + \"static/media/google-icon.df15d8e5.svg\";","import { useHistory } from 'react-router-dom'\r\nimport { Button } from '../../components/Button';\r\nimport { FormEvent, useContext, useState } from 'react';\r\nimport { AuthContext } from '../../Contexts/AuthContext';\r\nimport { database } from '../../services/firebase'\r\n\r\nimport illustrationSvg from '../../assets/images/illustration.svg';\r\nimport logoImg from '../../assets/images/logo.svg';\r\nimport googleImg from '../../assets/images/google-icon.svg';\r\n\r\nimport styles from '../Home/style.module.scss';\r\n\r\n\r\nexport function Home() {\r\n\r\n    const history = useHistory();\r\n    const [keyRoom, setKeyRoom] = useState('');\r\n    const { singInWithGoogle, user} = useContext(AuthContext);\r\n    \r\n    async function handleCreateRoom(){\r\n        if(!user){\r\n            await singInWithGoogle();\r\n        }\r\n\r\n        history.push('/rooms/new');\r\n            \r\n    }\r\n    \r\n    async function handleEntreRoom(e:FormEvent) {\r\n        e.preventDefault();\r\n        \r\n        if(keyRoom.trim() === ''){\r\n            return;\r\n        }\r\n\r\n        const roomRef = await database.ref(`/rooms/${keyRoom}`).get();\r\n\r\n        \r\n        if(!roomRef.exists()){\r\n            alert('Rooms not exist')\r\n            return;\r\n        }\r\n\r\n        if(roomRef.val().endAt){\r\n            alert('Room already closed')\r\n            return;\r\n        }\r\n        console.log(roomRef)\r\n        history.push(`/rooms/${keyRoom}`);\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={styles.pageAuth}>\r\n            <aside>\r\n                <img src={illustrationSvg} alt=\"Ilustração simbolizando perguntas e repostas\" />\r\n                <strong>Crie salas de Q&amp;A A ao-vivo</strong>\r\n                <p>tire as duvidas da sua adiência em tempo real</p>\r\n            </aside>\r\n            <main >\r\n                <div className={styles.mainContent}>\r\n                    <img src={logoImg} alt=\"Letmeask\" />\r\n\r\n                    <button onClick={handleCreateRoom} className={styles.createRoom}>\r\n                        <img src={googleImg} alt=\"logo google\" />\r\n                        Crie sua sala com o google\r\n                    </button>\r\n\r\n                    <div className={styles.separator}>\r\n                        ou entre em uma sala\r\n                    </div>\r\n                    <form onSubmit={handleEntreRoom}>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"digite o código da sala\"\r\n                            onChange={(e)=>{setKeyRoom(e.target.value)}}\r\n                            value={keyRoom}\r\n                        />\r\n                        <Button type=\"submit\">\r\n                            Entrar na sala\r\n                        </Button>\r\n\r\n                    </form>\r\n                </div>\r\n            </main>\r\n\r\n        </div>\r\n\r\n    )\r\n}","import { Link, useHistory } from 'react-router-dom';\r\nimport {FormEvent, useState} from 'react'\r\nimport illustrationSvg from '../../assets/images/illustration.svg';\r\nimport logoImg from '../../assets/images/logo.svg';\r\n\r\nimport styles from '../NewRoom/styles.module.scss';\r\nimport { Button } from '../../components/Button';\r\nimport { database } from '../../services/firebase';\r\nimport { useContext } from 'react';\r\nimport { AuthContext } from '../../Contexts/AuthContext';\r\n\r\nexport function NewRoom() {\r\n\r\n    const {user} = useContext(AuthContext);\r\n    const [newRoom, setNewRoom] = useState('');\r\n    const history = useHistory()\r\n    \r\n  async function handleCreateRoom(event:FormEvent){\r\n        event.preventDefault();\r\n        if(newRoom.trim() === ''){\r\n            return;\r\n        }\r\n\r\n        const roomRef = database.ref('rooms');\r\n\r\n        const firebaseRooms = await roomRef.push({\r\n            title: newRoom,\r\n            authorId: user?.id,\r\n        });\r\n\r\n        history.push(`/rooms/${firebaseRooms.key}`)\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <div className={styles.pageAuth}>\r\n            <aside>\r\n                <img src={illustrationSvg} alt=\"Ilustração simbolizando perguntas e repostas\" />\r\n                <strong>Crie salas de Q&amp;A A ao-vivo</strong>\r\n                <p>tire as duvidas da sua adiência em tempo real</p>\r\n            </aside>\r\n            <main >\r\n                <div className={styles.mainContent}>\r\n                    <img src={logoImg} alt=\"Letmeask\" />\r\n                    <h2>Criar uma nova Sala</h2>\r\n                    <form onSubmit={handleCreateRoom}>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Nome da Sala\"\r\n                            onChange={(e)=> setNewRoom(e.target.value)}\r\n                            value={newRoom}\r\n                        />\r\n                        <Button type=\"submit\">\r\n                            Criar sala\r\n                        </Button>\r\n\r\n                    </form>\r\n                    <p>Quer em uma sala existente ? <Link to=\"/\">clique aqui</Link> </p>\r\n                </div>\r\n            </main>\r\n\r\n        </div>\r\n\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/copy.61cdd47b.svg\";","\r\n\r\nimport CopyImg from '../../assets/images/copy.svg';\r\nimport styles from '../RoomCode/styles.module.scss';\r\n\r\n\r\ninterface RoomCodeProps{\r\n    code:string\r\n}\r\n\r\nexport function RoomCode(props:RoomCodeProps){\r\n\r\nfunction copyRoomCodeToClipboard(){\r\n    navigator.clipboard.writeText(props.code)\r\n}\r\n\r\n    return(\r\n        <button className={styles.roomCode} onClick={copyRoomCodeToClipboard}>\r\n            <div>\r\n                <img src={CopyImg} alt=\"Copy code\" />\r\n            </div>\r\n            <span>Sala# {props.code}</span>\r\n        </button>\r\n    )\r\n}","import '../Questions/styles.scss';\r\nimport { ReactNode } from 'react';\r\n\r\ntype QuestionsProps = {\r\n    content: string;\r\n    author: {\r\n        avatar: string;\r\n        name: string;\r\n    }\r\n    children?: ReactNode;\r\n    isAnswhered?:boolean;\r\n    isHighlighted?: boolean;\r\n}\r\n\r\nexport function Questions({ content, author, children, isAnswhered, isHighlighted}: QuestionsProps) {\r\n\r\n    return (\r\n        <div className={`question ${isAnswhered ? 'answered' : ''} ${isHighlighted && !isAnswhered ? 'highlighted' : ''}`}>\r\n            <p>{content}</p>\r\n            <footer>\r\n                <div className={\"userInfo\"}>\r\n                    <img src={author.avatar} alt={author.name} />\r\n                    <span>{author.name}</span>\r\n                </div>\r\n                <div>\r\n                    {children}\r\n                </div>\r\n            </footer>\r\n        </div>\r\n\r\n    )\r\n}","import { useContext, useEffect, useState } from \"react\";\r\nimport { AuthContext } from \"../Contexts/AuthContext\";\r\nimport { database } from \"../services/firebase\";\r\n\r\ninterface QuestionsType{\r\n    id: string;\r\n    author: {\r\n        name: string;\r\n        avatar: string;\r\n    }\r\n    content: string;\r\n    isAnswhered: boolean;\r\n    isHighlighted: boolean;\r\n    likeCount:number;\r\n    likeId:string | undefined;\r\n\r\n}\r\n\r\ntype FireBaseQuestions = Record<string, {\r\n    author: {\r\n        name: string;\r\n        avatar: string;\r\n    }\r\n    content: string;\r\n    isAnswhered: boolean;\r\n    isHighlighted: boolean;\r\n    likes: Record<string,{\r\n        authorId: string;\r\n    }>\r\n    \r\n}>\r\n\r\n\r\n\r\nexport function useRoom(roomsId:string){\r\n    const {user} = useContext(AuthContext);\r\n    const [questions, setQuestions] = useState<QuestionsType[]>([]);\r\n    const [title, setTitle] = useState()\r\n\r\n    \r\n    useEffect(() => {\r\n\r\n        const roomRef = database.ref(`/rooms/${roomsId}`);\r\n\r\n        roomRef.on('value', room => {\r\n            const databaseRoom = room.val();\r\n            const fireBaseQuestions: FireBaseQuestions = databaseRoom.questions ?? {};\r\n            const parseQuestions = Object.entries(fireBaseQuestions).map(([key, value]) => {\r\n                \r\n                \r\n                return {\r\n                    id: key,\r\n                    content: value.content,\r\n                    author: value.author,\r\n                    isHighlighted: value.isHighlighted,\r\n                    isAnswhered: value.isAnswhered,\r\n                    likeCount:Object.values(value.likes ?? {}).length,\r\n                    likeId: Object.entries(value.likes ?? {}).find(([key, like]) => like.authorId === user?.id)?.[0],             \r\n                }\r\n               \r\n            }) \r\n            setTitle(databaseRoom.title);\r\n            setQuestions(parseQuestions)\r\n            console.log(parseQuestions);\r\n            \r\n        })\r\n       \r\n        return () =>{\r\n            roomRef.off('value');\r\n        }\r\n\r\n    }, [roomsId, user?.id]);\r\n\r\n    return{questions, title}\r\n}","import { Button } from '../../components/Button';\r\nimport { RoomCode } from '../../components/RoomCode';\r\nimport { useParams } from 'react-router-dom';\r\nimport { FormEvent, useContext, useState } from 'react';\r\nimport { AuthContext } from '../../Contexts/AuthContext';\r\nimport { database } from '../../services/firebase';\r\nimport { Questions } from '../../components/Questions';\r\n\r\n\r\nimport styles from '../Room/styles.module.scss';\r\nimport logoImg from '../../assets/images/logo.svg';\r\nimport { useRoom } from '../../hooks/useRoom';\r\n\r\ninterface RoomParams {\r\n    id: string;\r\n}\r\n\r\n\r\n\r\n\r\nexport function Room() {\r\n\r\n    const params = useParams<RoomParams>();\r\n    const roomsId = params.id;\r\n    const { user } = useContext(AuthContext);\r\n    const { questions, title } = useRoom(roomsId);\r\n\r\n    const [newQuestion, setNewQuestion] = useState('');\r\n\r\n    async function handleSendQuestion(e: FormEvent) {\r\n        e.preventDefault();\r\n        if (newQuestion.trim() === '') {\r\n            return;\r\n        }\r\n\r\n        if (!user) {\r\n            throw new Error('You must be logged in')\r\n        }\r\n\r\n        const question = {\r\n            content: newQuestion,\r\n            author: {\r\n                name: user?.name,\r\n                avatar: user.photo\r\n            },\r\n            isHighlighted: false,\r\n            isAnswhered: false\r\n        };\r\n        await database.ref(`/rooms/${roomsId}/questions`).push(question);\r\n        setNewQuestion('');\r\n    }\r\n\r\n    async function handleLikeQuestion(questionId: string, likeId:string | undefined) {\r\n        if(likeId){\r\n            await database.ref(`/rooms/${roomsId}/questions/${questionId}/likes/${likeId}`).remove()\r\n        }else{\r\n            const newLike = await database.ref(`/rooms/${roomsId}/questions/${questionId}/likes`).push({\r\n                authorId: user?.id\r\n            })\r\n        }\r\n\r\n    }\r\n    return (\r\n        <div className={styles.pageRoom}>\r\n            <header>\r\n                <div className={styles.content}>\r\n                    <img src={logoImg} alt=\"Letmeask\" />\r\n                    <RoomCode code={roomsId} />\r\n                </div>\r\n            </header>\r\n\r\n            <main>\r\n                <div className={styles.roomtitle}>\r\n                    <h1>Sala {title}</h1>\r\n                    {questions.length > 0 && <span>{questions.length} pergunta(s)</span>}\r\n                </div>\r\n\r\n                <form onSubmit={handleSendQuestion}>\r\n                    <textarea\r\n                        placeholder=\"oque voce quer perguntar\"\r\n                        rows={5}\r\n                        onChange={e => setNewQuestion(e.target.value)}\r\n                        value={newQuestion}\r\n                    />\r\n\r\n                    <div className={styles.formFooter}>\r\n                        {user ? (\r\n                            <div className={styles.userInfo}>\r\n                                <img src={user.photo} alt={user.name} />\r\n                                <span>{user.name}</span>\r\n                            </div>\r\n                        ) :\r\n                            <span>Para enviar uma pergunta <button>faça seu login</button>.</span>\r\n                        }\r\n                        <Button type=\"submit\" disabled={!user}>Enviar pergunta</Button>\r\n                    </div>\r\n                </form>\r\n                {questions.length > 0 && questions.map((question) => {\r\n                    return (\r\n                        <Questions\r\n                            key={question.id}\r\n                            content={question.content}\r\n                            author={question.author}\r\n                            isAnswhered={question.isAnswhered}\r\n                            isHighlighted={question.isHighlighted}\r\n                        >\r\n                            {!question.isAnswhered && (\r\n                                <button\r\n                                className={`like-button ${question.likeId ? 'liked' : ''}`}\r\n                                type=\"button\"\r\n                                aria-label=\"Marcar como gostei\"\r\n                                onClick={() => handleLikeQuestion(question.id, question.likeId)}\r\n                            >\r\n                                {question.likeCount > 0 && <span>{question.likeCount}</span>}\r\n                                <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                    <path d=\"M7 22H4C3.46957 22 2.96086 21.7893 2.58579 21.4142C2.21071 21.0391 2 20.5304 2 20V13C2 12.4696 2.21071 11.9609 2.58579 11.5858C2.96086 11.2107 3.46957 11 4 11H7M14 9V5C14 4.20435 13.6839 3.44129 13.1213 2.87868C12.5587 2.31607 11.7956 2 11 2L7 11V22H18.28C18.7623 22.0055 19.2304 21.8364 19.5979 21.524C19.9654 21.2116 20.2077 20.7769 20.28 20.3L21.66 11.3C21.7035 11.0134 21.6842 10.7207 21.6033 10.4423C21.5225 10.1638 21.3821 9.90629 21.1919 9.68751C21.0016 9.46873 20.7661 9.29393 20.5016 9.17522C20.2371 9.0565 19.9499 8.99672 19.66 9H14Z\" stroke=\"#737380\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n                                </svg>\r\n                            </button>\r\n                            )}\r\n                        </Questions>\r\n                    )\r\n                })}\r\n            </main>\r\n        </div>\r\n    );\r\n}","export default __webpack_public_path__ + \"static/media/delete.22ba6e00.svg\";","export default __webpack_public_path__ + \"static/media/check.5dfa6ed6.svg\";","export default __webpack_public_path__ + \"static/media/answer.4502a8d5.svg\";","import { Button } from '../../components/Button';\r\nimport { RoomCode } from '../../components/RoomCode';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport {Questions} from '../../components/Questions';\r\nimport { useRoom } from '../../hooks/useRoom';\r\nimport { database } from '../../services/firebase';\r\n\r\nimport styles from '../Room/styles.module.scss';\r\nimport logoImg from '../../assets/images/logo.svg';\r\nimport deleteImg from '../../assets/images/delete.svg';\r\nimport checkImg from '../../assets/images/check.svg';\r\nimport answerImg from '../../assets/images/answer.svg';\r\n\r\n\r\n\r\ninterface RoomParams {\r\n    id: string;\r\n}\r\n\r\n\r\n\r\n\r\nexport function AdminRoom() {\r\n\r\n    const params = useParams<RoomParams>();\r\n    const roomsId = params.id;\r\n    const history = useHistory();\r\n   // const { user } = useContext(AuthContext);\r\n    const {questions, title} = useRoom(roomsId);\r\n\r\n    async function handleDeleteQuestion(questionId:string) {\r\n       if(window.confirm('Você tem certeza que deseja deletar essa pergunta?')){\r\n            await database.ref(`/rooms/${roomsId}/questions/${questionId}`).remove()\r\n       }\r\n    }\r\n\r\n    async function handleCheckQuestionAsAnswered(questionId:string){\r\n        await database.ref(`/rooms/${roomsId}/questions/${questionId}`).update({\r\n            isAnswhered:true\r\n        })\r\n    }\r\n\r\n    async function handleCheckHighlightQuestions(questionId:string){\r\n        await database.ref(`/rooms/${roomsId}/questions/${questionId}`).update({\r\n            isHighlighted:true\r\n        })\r\n    }\r\n\r\n    async function handleEndRoom(){\r\n        database.ref(`/rooms/${roomsId}`).update({\r\n            endAt: new Date(),\r\n        })\r\n\r\n        history.push('/')\r\n    }\r\n\r\n    return (\r\n        <div className={styles.pageRoom}>\r\n            <header>\r\n                <div className={styles.content}>\r\n                    <img src={logoImg} alt=\"Letmeask\" />\r\n                    <div>\r\n                        <RoomCode code={roomsId} />\r\n                        <Button isOutlined onClick={handleEndRoom}>Encerrar Sessão</Button>\r\n                    </div>\r\n                </div>\r\n            </header>\r\n\r\n            <main>\r\n                <div className={styles.roomtitle}>\r\n                    <h1>Sala {title}</h1>\r\n                    {questions.length > 0 && <span>{questions.length} pergunta(s)</span>}\r\n                </div>\r\n                {questions.length > 0 && questions.map((value)=>{\r\n                    return(\r\n                        <Questions \r\n                        key={value.id} \r\n                        content={value.content} \r\n                        author={value.author}\r\n                        isAnswhered={value.isAnswhered}\r\n                        isHighlighted={value.isHighlighted}\r\n                        >\r\n                            {!value.isAnswhered && (\r\n                                <>\r\n                                <button\r\n                                onClick={()=> handleCheckQuestionAsAnswered(value.id)}\r\n                                >\r\n                                    <img src={checkImg} alt=\"Marcar pergunta como respondida\" />\r\n                                </button>\r\n                                <button\r\n                                onClick={()=> handleCheckHighlightQuestions(value.id)}\r\n                                >\r\n                                    <img src={answerImg} alt=\"Marcar as perguntas em destaques\" />\r\n                                </button>\r\n                                </>\r\n                            )}\r\n                            <button\r\n                            onClick={()=> handleDeleteQuestion(value.id)}\r\n                            >\r\n                                <img src={deleteImg} alt=\"Deletar pergunta\" />\r\n                            </button>\r\n                        </Questions>\r\n                    )\r\n                })}\r\n            </main>\r\n        </div>\r\n    );\r\n}","\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\nimport { Home } from './pages/Home';\nimport { NewRoom } from './pages/NewRoom';\nimport { AuthContextsProvider } from './Contexts/AuthContext'\nimport { Room } from './pages/Room';\nimport { AdminRoom } from './pages/AdminRoom';\n\n\n\n\n\n\nfunction App() {\n \n  return (\n   <BrowserRouter>\n    <AuthContextsProvider>\n      <Switch>\n        <Route path=\"/\" exact component={Home}/>\n        <Route path=\"/rooms/new\" exact component={NewRoom}/>\n        <Route path=\"/rooms/:id\" component={Room}/>\n        <Route path=\"/admin/rooms/:id\" component={AdminRoom}/>\n      </Switch>\n    </AuthContextsProvider>\n   </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './styles/global.scss'\nimport './services/firebase'\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}